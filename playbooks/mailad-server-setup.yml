# Setup a corporate AD-connected e-mail server
# Based on MailAD https://github.com/stdevPavelmc/mailad
# By dienteperro1207@yahoo.com

---
- hosts: mailservers
  become: true
  vars_files:
    - "../vars/{{ inventory_hostname }}.yml"
  vars:
    - packages: "{{ required_packages['mailad'] }}"

  tasks:
    - name: Install packages
      include_tasks: ../tasks/apt-install.yml

    - name: Install packages required for disclaimers in emails
      apt:
        name: "{{ required_packages['mailad-disclaimer'] }}"
        update_cache: "{{ apt_get_update_cache|bool }}"
        cache_valid_time: 1800
        state: "latest"
        force_apt_get: True
      when: ( apt_get_update_cache is defined ) and ( apt_get_update_cache|bool == True ) and ( mailad_enable_disclaimer is defined ) and ( mailad_enable_disclaimer|bool == True )

    - name: Install packages required for antivirus check
      apt:
        name: "{{ required_packages['mailad-av'] }}"
        update_cache: "{{ apt_get_update_cache|bool }}"
        cache_valid_time: 1800
        state: "latest"
        force_apt_get: True
      when: ( apt_get_update_cache is defined ) and ( apt_get_update_cache|bool == True ) and ( mailad_enable_av is defined ) and ( mailad_enable_av|bool == True )

    - name: Install packages required for spam check
      apt:
        name: "{{ required_packages['mailad-spam'] }}"
        update_cache: "{{ apt_get_update_cache|bool }}"
        cache_valid_time: 1800
        state: "latest"
        force_apt_get: True
      when: ( apt_get_update_cache is defined ) and ( apt_get_update_cache|bool == True ) and ( mailad_enable_spamd is defined ) and ( mailad_enable_spamd|bool == True )

    - name: Ensure "{{ mailad_vmailname }}" group exists
      group:
        name: "{{ mailad_vmailname }}"
        gid: "{{ mailad_vmailgid }}"
        state: present

    - name: Ensure "{{ mailad_vmailname }}" user exists
      user:
        name: "{{ mailad_vmailname }}"
        home: "{{ mailad_vmailhome }}"
        shell: /bin/false
        uid: "{{ mailad_vmailuid }}"
        group: "{{ mailad_vmailname }}"
        groups: "{{ mailad_vmailname }}"
        append: no
        comment: Directorio virtual para buzones de correo electronico

    - name: Make sure "{{ mailad_vmailname }}" user has its home folder
      file:
        path: "{{ mailad_vmailhome }}"
        state: directory
        owner: "{{ mailad_vmailname }}"
        group: "{{ mailad_vmailname }}"
        mode: '0770'

    - name: "Enforce file and folder attributes in {{ mailad_vmailstorage }}"
      file:
        dest: "{{ mailad_vmailhome }}"
        owner: "{{ mailad_vmailname }}"
        group: "{{ mailad_vmailname }}"
        mode: u=rwX,g=rwX,o-rwx
        recurse: yes

# Certificados de los servers samba y de este servidor en playbook aparte.

    - name: Check if /etc/ssl/dh directory exists
      stat:
        path: /etc/ssl/dh
      register: dh_directory_present

    - name: Create /etc/ssl/dh directory
      file:
        path: /etc/ssl/dh
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not dh_directory_present['stat']['exists']

    - name: Generate DH Parameters for postfix (2048 bits)
      openssl_dhparam:
        path: /etc/ssl/dh/RSA2048.pem
        size: 2048
        mode: '0644'
      notify: postfix check

    - name: Make sure clamav user belongs to amavis group
      user:
        name: clamav
        state: present
        groups: amavis
        append: yes
      when: mailad_enable_av

    - name: Check if /etc/postfix directory exists
      stat:
        path: /etc/postfix
      register: postfix_directory_present

    - name: Create /etc/postfix directory
      file:
        path: /etc/postfix
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not postfix_directory_present['stat']['exists']

    - name: Check if /etc/postfix/aliases directory exists
      stat:
        path: /etc/postfix/aliases
      register: postfix_aliases_directory_present

    - name: Create /etc/postfix/aliases directory
      file:
        path: /etc/postfix/aliases
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not postfix_aliases_directory_present['stat']['exists']

    - name: Apply template to /etc/postfix/aliases/alias_virtuales
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/postfix/aliases/alias_virtuales.j2
        dest: /etc/postfix/aliases/alias_virtuales
        owner: root
        group: root
        mode: '0644'
        backup: yes
      notify: postmap alias_virtuales

    - name: Check if /etc/postfix/rules directory exists
      stat:
        path: /etc/postfix/rules
      register: postfix_rules_directory_present

    - name: Create /etc/postfix/rules directory
      file:
        path: /etc/postfix/rules
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not postfix_rules_directory_present['stat']['exists']

    - name: Apply template to /etc/postfix/rules/everyone_list_check
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/postfix/rules/everyone_list_check.j2
        dest: /etc/postfix/rules/everyone_list_check
        owner: root
        group: root
        mode: '0644'
        backup: yes
      notify: postmap everyone_list_check

    - name: Check if /etc/postfix/ldap directory exists
      stat:
        path: /etc/postfix/ldap
      register: postfix_ldap_directory_present

    - name: Create /etc/postfix/ldap directory
      file:
        path: /etc/postfix/ldap
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not postfix_ldap_directory_present['stat']['exists']

    - name: Apply template to /etc/postfix/rules/filter_loc
      template:
        src: ../templates/{{ ansible_fqdn }}/etc/postfix/rules/filter_loc.j2
        dest: /etc/postfix/rules/filter_loc
        owner: root
        group: root
        mode: '0644'
        backup: yes
      notify: postfix check

    - name: Apply template to /etc/postfix/rules/lista_negra
      template:
        src: ../templates/{{ ansible_fqdn }}/etc/postfix/rules/lista_negra.j2
        dest: /etc/postfix/rules/lista_negra
        owner: root
        group: root
        mode: '0644'
        backup: yes
      notify: postmap lista_negra

    - name: "Apply templates to /etc/postfix folder items"
      template:
        src: "../templates/{{ ansible_distribution_release }}/etc/postfix/{{ item }}.j2"
        dest: "/etc/postfix/{{ item }}"
        owner: root
        group: root
        mode: '0644'
        backup: yes
      loop: "{{ mailad_postfix_templates }}"
      notify: postfix check

    - name: Check if /etc/amavis directory exists
      stat:
        path: /etc/amavis
      register: amavis_directory_present

    - name: Create /etc/amavis directory
      file:
        path: /etc/amavis
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not amavis_directory_present['stat']['exists']

    - name: Check if /etc/amavis/conf.d directory exists
      stat:
        path: /etc/amavis/conf.d
      register: amavis_confd_directory_present

    - name: Create /etc/amavis/conf.d directory
      file:
        path: /etc/amavis/conf.d
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not amavis_confd_directory_present['stat']['exists']

    - name: Check if /etc/amavis/en_US directory exists
      stat:
        path: /etc/amavis/en_US
      register: amavis_enus_directory_present

    - name: Create /etc/amavis/en_US directory
      file:
        path: /etc/amavis/en_US
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not amavis_enus_directory_present['stat']['exists']

    - name: "Apply templates to /etc/amavis folder items"
      template:
        src: "../templates/{{ ansible_distribution_release }}/etc/amavis/{{ item }}.j2"
        dest: "/etc/amavis/{{ item }}"
        owner: root
        group: root
        mode: '0644'
        backup: yes
      loop: "{{ mailad_amavis_templates }}"
      notify: Restart amavis

    - name: Check if /etc/dovecot directory exists
      stat:
        path: /etc/dovecot
      register: dovecot_directory_present

    - name: Create /etc/dovecot directory
      file:
        path: /etc/dovecot
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not dovecot_directory_present['stat']['exists']

    - name: Apply template to /etc/dovecot/dovecot-ldap.conf.ext
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/dovecot/dovecot-ldap.conf.ext.j2
        dest: /etc/dovecot/dovecot-ldap.conf.ext
        owner: root
        group: root
        mode: '0600'
        backup: yes
      notify: Restart dovecot

    - name: "Apply templates to /etc/dovecot folder items"
      template:
        src: "../templates/{{ ansible_distribution_release }}/etc/dovecot/{{ item }}.j2"
        dest: "/etc/dovecot/{{ item }}"
        owner: root
        group: root
        mode: '0644'
        backup: yes
      loop: "{{ mailad_dovecot_templates }}"
      notify: Restart dovecot

    - name: Check if /etc/dovecot/scripts directory exists
      stat:
        path: /etc/dovecot/scripts
      register: dovecot_scripts_directory_present

    - name: Create /etc/dovecot/scripts directory
      file:
        path: /etc/dovecot/scripts
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not dovecot_scripts_directory_present['stat']['exists']

    - name: Apply template to /etc/dovecot/scripts/quota-warning.sh
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/dovecot/scripts/quota-warning.sh.j2
        dest: /etc/dovecot/scripts/quota-warning.sh
        owner: root
        group: root
        mode: '0755'
        backup: yes
      notify: Restart dovecot

    - name: Apply template to /etc/cron.daily/mail_groups_update
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/cron.daily/mail_groups_update.j2
        dest: /etc/cron.daily/mail_groups_update
        owner: root
        group: root
        mode: '0750'
        backup: yes
      notify: Run mail_groups_update

    - name: Apply template to /etc/cron.daily/daily_mail_resume
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/cron.daily/daily_mail_resume.j2
        dest: /etc/cron.daily/daily_mail_resume
        owner: root
        group: root
        mode: '0755'
        backup: yes

    - name: Apply template to /etc/cron.monthly/check_maildirs
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/cron.monthly/check_maildirs.j2
        dest: /etc/cron.monthly/check_maildirs
        owner: root
        group: root
        mode: '0750'
        backup: yes

    - name: Check if /var/lib/dovecot/sieve directory exists
      stat:
        path: /var/lib/dovecot/sieve
      register: dovecot_sieve_directory_present

    - name: Create /var/lib/dovecot/sieve directory
      file:
        path: /var/lib/dovecot/sieve
        state: directory
        owner: vmail
        group: vmail
        mode: '0755'
      when: ( not dovecot_sieve_directory_present['stat']['exists'] ) and ( mailad_dovecot_spam_filter_enabled|bool == True )

    - name: Apply template to /var/lib/dovecot/sieve/default.sieve
      template:
        src: ../templates/{{ ansible_distribution_release }}/var/lib/dovecot/sieve/default.sieve.j2
        dest: /var/lib/dovecot/sieve/default.sieve
        owner: "{{ mailad_vmailname }}"
        group: "{{ mailad_vmailname }}"
        mode: '0644'
        backup: yes
      when: mailad_dovecot_spam_filter_enabled|bool == True
      notify: compile default.sieve

    - name: Apply template to /etc/aliases
      template:
        src: ../templates/{{ ansible_fqdn }}/etc/aliases.j2
        dest: /etc/aliases
        owner: root
        group: root
        mode: '0644'
        backup: yes
      notify: Apply aliases

    - name: Apply template to /etc/cron.hourly/av_filter_on_clamav_alive
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/cron.hourly/av_filter_on_clamav_alive.j2
        dest: /etc/cron.hourly/av_filter_on_clamav_alive
        owner: root
        group: root
        mode: '0755'
        backup: yes
      when: ( mailad_enable_av is defined ) and ( mailad_enable_av|bool == True )
      notify:
        - Enable clamav-freshclam
        - Enable clamav-daemon

    - name: Remove /etc/cron.hourly/av_filter_on_clamav_alive
      file:
        path: /etc/cron.hourly/av_filter_on_clamav_alive
        state: absent
      when: ( mailad_enable_av is defined ) and ( mailad_enable_av|bool == False )
      notify:
        - Disable clamav-freshclam
        - Disable clamav-daemon

    - name: Apply template to /etc/default/spamassassin
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/default/spamassassin.j2
        dest: /etc/default/spamassassin
        owner: root
        group: root
        mode: '0644'
        backup: yes
      when: (mailad_enable_spamd is not defined) or (( mailad_enable_spamd is defined ) and ( mailad_enable_spamd|bool == True ))
      notify: Enable spamassassin

    - name: Remove /etc/cron.daily/spamassassin
      file:
        path: /etc/cron.daily/spamassassin
        state: absent
      when: ( mailad_enable_spamd is defined ) and ( mailad_enable_spamd|bool == False )
      notify: Disable spamassassin

    - name: Ensure "filter" user exists
      user:
        name: filter
        home: /var/spool/filter
        system: yes
        comment: Postfix Filters
      when: ( mailad_enable_disclaimer is defined ) and ( mailad_enable_disclaimer|bool == True )

    - name: Check if /var/spool/filter directory exists
      stat:
        path: /var/spool/filter
      register: var_spool_filter_directory_present

    - name: Create /var/spool/filter directory
      file:
        path: /var/spool/filter
        state: directory
        owner: filter
        group: filter
        mode: '0750'
      when: ( not var_spool_filter_directory_present['stat']['exists'] ) and ( mailad_enable_disclaimer is defined ) and ( mailad_enable_disclaimer|bool == True )

    - name: Check if /etc/disclaimer directory exists
      stat:
        path: /etc/disclaimer
      register: etc_disclaimer_directory_present

    - name: Create /etc/disclaimer directory
      file:
        path: /etc/disclaimer
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: ( not etc_disclaimer_directory_present['stat']['exists'] ) and ( mailad_enable_disclaimer is defined ) and ( mailad_enable_disclaimer|bool == True )

    - name: Apply template to /etc/postfix/disclaimer
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/postfix/disclaimer.j2
        dest: /etc/postfix/disclaimer
        owner: root
        group: filter
        mode: '0750'
        backup: yes
      when: ( mailad_enable_disclaimer is defined ) and ( mailad_enable_disclaimer|bool == True )

    - name: Apply template to /etc/disclaimer/disclaimer.txt
      template:
        src: ../templates/{{ ansible_distribution_release }}/etc/disclaimer/disclaimer.txt.j2
        dest: /etc/disclaimer/disclaimer.txt
        owner: root
        group: filter
        mode: '0644'
        backup: yes
      when: ( mailad_enable_disclaimer is defined ) and ( mailad_enable_disclaimer|bool == True )
      
    - name: Forced reload configs
      command: /usr/bin/newaliases
      when: ( mailad_force_reload is defined ) and ( mailad_force_reload|bool == True )
      notify:
        - compile default.sieve
        - postmap alias_virtuales
        - postmap everyone_list_check
        - postmap lista_negra
        - postfix check
        - Restart amavis
        - Restart dovecot
        - Run mail_groups_update

  handlers:
    - name: Apply aliases
      command: /usr/bin/newaliases

    - name: compile default.sieve
      command: /usr/bin/sievec /var/lib/dovecot/sieve/default.sieve

    - name: Disable clamav-daemon
      systemd:
        state: stopped
        daemon_reload: no
        enabled: no
        masked: yes
        name: clamav-daemon

    - name: Disable clamav-freshclam
      systemd:
        state: stopped
        daemon_reload: no
        enabled: no
        masked: yes
        name: clamav-freshclam

    - name: Enable clamav-daemon
      systemd:
        state: restarted
        daemon_reload: yes
        enabled: yes
        masked: no
        name: clamav-daemon

    - name: Enable clamav-freshclam
      systemd:
        state: restarted
        daemon_reload: yes
        enabled: yes
        masked: no
        name: clamav-freshclam

    - name: Disable spamassassin
      systemd:
        state: stopped
        daemon_reload: no
        enabled: no
        masked: yes
        name: spamassassin

    - name: Enable spamassassin
      systemd:
        state: restarted
        daemon_reload: yes
        enabled: yes
        masked: no
        name: spamassassin

    - name: postmap alias_virtuales
      command: /usr/sbin/postmap /etc/postfix/aliases/alias_virtuales
      notify: Reload postfix

    - name: postmap everyone_list_check
      command: /usr/sbin/postmap /etc/postfix/rules/everyone_list_check
      notify: Reload postfix

    - name: postmap lista_negra
      command: /usr/sbin/postmap /etc/postfix/rules/lista_negra
      notify: Reload postfix

    - name: postfix check
      command: /usr/sbin/postfix check
      notify: Reload postfix

    - name: Reload postfix
      command: /usr/sbin/postfix reload
      notify: Restart postfix

    - name: Restart amavis
      service:
        name: amavis
        state: restarted

    - name: Restart dovecot
      service:
        name: dovecot
        state: restarted

    - name: Restart postfix
      service:
        name: postfix
        state: restarted

    - name: Run mail_groups_update
      command: /etc/cron.daily/mail_groups_update
